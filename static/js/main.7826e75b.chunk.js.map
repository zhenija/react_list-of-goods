{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","App","state","NONE","sortAlph","setState","sortByLength","resetter","className","type","classNames","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAsBzB,OAnBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAKRR,G,SAtCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,SAAW,WACT,EAAKC,SAAS,CACZf,SAAUJ,EAASU,WARzB,EAYEU,aAAe,WACb,EAAKD,SAAS,CACZf,SAAUJ,EAASY,UAdzB,EAkBES,SAAW,WACT,EAAKF,SAAS,CACZf,SAAUJ,EAASiB,KACnBZ,YAAY,KArBlB,4CAyBE,WAAU,IAAD,OACP,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYC,KAAKT,MAAMZ,WAAaJ,EAASU,UAEjDgB,QAAS,WACP,EAAKR,YAPT,iCAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYC,KAAKT,MAAMZ,WAAaJ,EAASY,SAEjDc,QAAS,WACP,EAAKN,gBAPT,4BAaA,wBACEG,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaC,KAAKT,MAAMX,aAE5BqB,QAAS,WACP,EAAKP,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBARzB,sBAeEoB,KAAKT,MAAMZ,UAAYqB,KAAKT,MAAMX,aAEhC,wBACEkB,KAAK,SACLD,UAAU,4BACVI,QAAS,WACP,EAAKL,YAJT,sBAYN,6BACGnB,EAAkBD,EAAiBwB,KAAKT,OAAOW,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAtFrB,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7826e75b.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n// To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // // eslint-disable-next-line no-console\n  // console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlph = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  resetter = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPABET },\n            )}\n            onClick={() => {\n              this.sortAlph();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.sortByLength();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType || this.state.isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.resetter();\n                }}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}